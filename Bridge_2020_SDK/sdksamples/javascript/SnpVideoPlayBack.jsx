/////////////////////////////////////////////////////////////////////////// ADOBE SYSTEMS INCORPORATED// Copyright 2018 Adobe Systems Incorporated// All Rights Reserved//// NOTICE: Adobe permits you to use, modify, and distribute this file in accordance with the// terms of the Adobe license agreement accompanying it.  If you have received this file from a// source other than Adobe, then your use, modification, or distribution of it requires the prior// written permission of Adobe.//////////////////////////////////////////////////////////////////////////////**   @fileoverview Shows how to use a Thumbnail object to control video playback in Preview panel.  @class Shows how to use a Thumbnail object to control video playback in Preview panel.   <h4>Usage</h4>   <ol>   <li>This script will not work with ExtendScript Toolkit application because Bridge needs to be constantly in focus in order to run video playback.   <li>In order to use these APIs, one needs to run it via CEP panel or command prompt.   <li> In Bridge, select the video/audio file which you want to play in Preview panel.   <li> Assign parameters value to API according to your use.   </ol>   <h4>Description</h4>     <p>Shows how to use a Thumbnail object to control video playback in Preview panel.   <p>This provides access to volume, playback and autoloop in the video.   <p>You must select atleast a single file for the Video playback to work.   .<br />   @constructor Constructor   */function SnpVideoPlayBack(){	/**	 The context in which this snippet can run.	 @type String	*/	this.requiredContext = "\tExecute against Bridge.\nBridge must be running, content should be selected and Preview panel should be visible\n";	//$.level = 1; // Debugging level}/** Functional part of this snippet.    Gets a Thumbnail object for the selected thumbnail and uses it to control video playback in Preview panel. 	 @return True if the snippet ran as expected, false if no video/audio file is selected in Bridge	 @type Boolean*/SnpVideoPlayBack.prototype.run = function(){	var retval = true;	if(!this.canRun()) {		retval = false;			return retval;	}  //Make sure Bridge is front ruuning window  app.bringToFront();	// Using first selected file for video playback  if(app.document.selectionLength > 0)  {      //Using first selection for demo    var t = app.document.selections[0];    //Checking if current selected item is a video/audio      if (t.isDynamicMedia())      {        //Changing play state        t.togglePlayPause();                //Checking the play state        if (t.isPlaying())        {          $.writeln("Media is played");        }        else        {          $.writeln("Media is stopped");        }        //Changing the autoloop status        t.toggleAutoLoop();        //Checking the auto loop state        if (t.isAutoLoopOn())        {          $.writeln("Auto loop is now enabled");        }        else        {          $.writeln("Auto loop is now disabled");        }        //Setting playback slider at 60%. First parameter is value and second parameter is maxValue of your scale.        t.setPosition(60,100);        //Getting the playback slider position        var pos =t.getPosition();        $.writeln("Playback slider is set at "+pos[0]+"/"+pos[1]+" position");        //Setting the volume at 30%. First parameter is value and second parameter is maxValue of your scale.        t.setPosition(30,100);        //Getting the current volume        var vol =t.getVolume();        $.writeln("Volume is set at "+vol[0]+"/"+vol[1]);      }  }	return retval;}/** Determines whether snippet can be run given current context. The snippet fails if these preconditions are not met:  <ul> <li> Must in Bridge <li> A single image file must be selected in Bridge </ul> @return True if this snippet can run, false otherwise @type Boolean*/SnpVideoPlayBack.prototype.canRun = function(){			// must run in Bridge 	// must be single image file	if((BridgeTalk.appName == "bridge") && app.document.selectionLength > 0)	{		return true;	}	// Fail if these preconditions are not met.  	$.writeln("ERROR:: Cannot run SnpVideoPlayBack");	$.writeln(this.requiredContext);	return false;}/** "main program": construct an anonymous instance and run it  as long as we are not unit-testing this snippet.*/if(typeof(SnpVideoPlayBack_unitTest)  == "undefined") {    new SnpVideoPlayBack().run();}