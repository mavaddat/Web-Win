////////////////////////////////////////////////////////////////////////////// ADOBE SYSTEMS INCORPORATED// Copyright 2017 Adobe Systems Incorporated// All Rights Reserved//// NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance with the// terms of the Adobe license agreement accompanying it.  If you have received this file from a// source other than Adobe, then your use, modification, or distribution of it requires the prior// written permission of Adobe.//////////////////////////////////////////////////////////////////////////////**  @fileoverview Shows how to update and use bridge quick search  @class Shows  how to update and use bridge quick search using QuickSearch Object  <h4>Usage</h4> 	      <ol>     <li> Launch Bridge CC 2018.     <li> Open the snippet in the ExtendScript Toolkit (see Readme.txt), setting Bridge CC 2018 as the target application.	  <li> Edit the search string and search method  you want to use.	<li> You will see the search result in Content Panel(In Stock_Search option).   </ol>	  <h4>Description</h4><p>QuickSearch object gives capabality to use bridge quicksearch feature through javascript.This quick search object provides five methods to use this feature. You can get or set the quick search method.Search strings can be retrieved or get cleared. Last method is used for searching. Results will appear in content panel.<p>Note:  The results will be shown in default browser in case of Stock_Search option selected   <p>See the JavaScript Tools Guide for more details.<br />   @constructor Constructor */function SnpQuickSearch() {	/**	 The context in which this snippet can run.	 @type String	*/	this.requiredContext = "Needs to run in Bridge";	}/** Functional part of this snippet.  Selects a search method and searches the string in bridge  @return True if the snippet ran as expected, false otherwise @type boolean*/SnpQuickSearch.prototype.run = function() {    	if(!this.canRun())	{		return false;	}            var qsearch = new QuickSearch("Created by SnPQuickSearch");    qsearch.clearSearchString();    $.writeln("Clearing search string in Bridge");          /**         Bridge Search:Current folder                               “bridge"         Search Adobe Stock			 	                   “Stock_Search”         Spotlight/Desktop Search: Current folder		  “os_folder”         Spotlight/Desktop Search: Computer			   “os_computer"        Edit Search method from above list as  per your requirement        @type String        */    qsearch.setSearchMethod("os_folder");    /**        Replace search string here        @type String       */    qsearch.searchString("");    	$.writeln("Searching String "+ qsearch.getSearchString());	$.writeln("Ran SnpQuickSearchSearch");		return true;}/**  Determines whether snippet can be run given current context.  The snippet   fails if these preconditions are not met:  <ul>  <li> Must be running in Bridge  <li> A selection must be made in the Content pane of Bridge   </ul>  @return True is this snippet can run, false otherwise  @type boolean*/SnpQuickSearch.prototype.canRun = function() {	// Must be running in Bridge & have a selection	if( (BridgeTalk.appName == "bridge")) {		return true;	}	// Fail if these preconditions are not met.  	// Bridge must be running,	$.writeln("ERROR:: Cannot run SnpQuikcSearch");	$.writeln(this.requiredContext);	return false;}/** "main program": construct an anonymous instance and run it  as long as we are not unit-testing this snippet.*/if(typeof(SnpQuickSearch_unitTest ) == "undefined") {	new SnpQuickSearch().run();}